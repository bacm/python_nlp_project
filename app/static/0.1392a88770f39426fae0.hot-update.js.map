{"version":3,"sources":["webpack:///./src/app/App.tsx","webpack:///./src/app/components/Categorizer.tsx","webpack:///./src/app/Store.ts"],"names":["ReactDOM","render","Provider","store","document","getElementById","useSelector","state","textAnalysis","map","e","label","Store","createStore","composeWithDevTools","applyMiddleware"],"mappings":"sGAAA,aACA,OACA,QACA,OACA,aACA,SAEAA,EAASC,OACL,gBAAC,EAAAC,SAAQ,CAACC,MAAO,WACf,gBAAC,UAAW,OAEdC,SAASC,eAAe,U,kFCX5B,WACA,SACA,SACA,SAGA,qBAGI,OADiB,EAAAC,aAAY,SAACC,GAAqB,OAAAA,EAAMC,gBAEzD,2BACI,gBAAC,UAAS,MAJA,CAAC,QAAS,QAAS,KAKtBC,KAAI,SAACC,GAAM,uBAAC,UAAY,CAACC,MAAOD,U,kFCZ/C,YACA,SACA,SACA,SAEME,EAAQ,EAAAC,YAAY,UAAa,EAAAC,oBAAoB,EAAAC,gBAAgB,aAI3E,UAAeH","file":"0.1392a88770f39426fae0.hot-update.js","sourcesContent":["import Categorizer from './components/Categorizer'\r\nimport * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport '../style/styles.scss'\r\nimport {Provider} from 'react-redux'\r\nimport store from './Store'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <Categorizer />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n  );","import * as React from 'react'\r\nimport PartOfSpeech from './PartOfSpeech'\r\nimport TextInput from './TextInput'\r\nimport {useSelector} from 'react-redux'\r\nimport { RootStore } from '../Store'\r\n\r\nexport default function Categorizer() {\r\n    const words = ['hello', 'world', '!']\r\n    const analysis = useSelector((state: RootStore) => state.textAnalysis)\r\n    return (\r\n    <div>\r\n        <TextInput />\r\n        {words.map((e) => <PartOfSpeech label={e}/>)} \r\n    </div>)\r\n}","import {createStore, applyMiddleware} from 'redux'\r\nimport RootReducer from './reducers/RootReducer'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst Store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport type RootStore = ReturnType<typeof RootReducer>\r\n\r\nexport default Store"],"sourceRoot":""}